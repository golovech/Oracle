-- 비디오샵 DB 모델링
-- 설문조사 DB 모델링 (팀)
-- 목 오후 팀플 시작

[비디오]
비디오       영화
0001        홍길동 정보같음
0002 



CREATE TABLE ANSWERS (
    SUL_NO  NUMBER
    , memid VARCHAR2(15 CHAR)
    , ans NUMBER
)

DROP TABLE TABLE2 ;

    
    DROP TABLE table2 CASCADE CONSTRAINTS; 
    DROP TABLE answers CASCADE CONSTRAINTS; 
    DROP TABLE users CASCADE CONSTRAINTS; 
    DROP TABLE sul CASCADE CONSTRAINTS; 
    DROP TABLE hangmok CASCADE CONSTRAINTS; 


-- HANGMOK
DROP TABLE HANGMOK ;
DROP TABLE sul;
--
CREATE SEQUENCE SEQ_NUM;

INSERT INTO SUL(SUL_NO,TITLE,STARTD,ENDD,AUTHOR)
    VALUES(SEQ_NUM.NEXTVAL,'질문1','2006-03-01','2006-04-01','관리자');
INSERT INTO HANGMOK(LIST,LISTNUM,SUL_NO)
    VALUES('QWER',1,SEQ_NUM.CURRVAL);
INSERT INTO HANGMOK(LIST,LISTNUM,SUL_NO)
    VALUES('ASDF',2,SEQ_NUM.CURRVAL);
INSERT INTO HANGMOK(LIST,LISTNUM,SUL_NO)
    VALUES('ZXCV',3,SEQ_NUM.CURRVAL);
INSERT INTO HANGMOK(LIST,LISTNUM,SUL_NO)
    VALUES('TYUI',4,SEQ_NUM.CURRVAL);
INSERT INTO HANGMOK(LIST,LISTNUM,SUL_NO)
    VALUES('GHJK',5,SEQ_NUM.CURRVAL);
    
INSERT INTO SUL(SUL_NO,TITLE,STARTD,ENDD,AUTHOR)
    VALUES(SEQ_NUM.NEXTVAL,'질문2','2006-03-01','2006-04-01','관리자');
INSERT INTO HANGMOK(LIST,LISTNUM,SUL_NO)
    VALUES('QWER',1,SEQ_NUM.CURRVAL);
INSERT INTO HANGMOK(LIST,LISTNUM,SUL_NO)
    VALUES('ASDF',2,SEQ_NUM.CURRVAL);
INSERT INTO HANGMOK(LIST,LISTNUM,SUL_NO)
    VALUES('ZXCV',3,SEQ_NUM.CURRVAL);
INSERT INTO HANGMOK(LIST,LISTNUM,SUL_NO)
    VALUES('TYUI',4,SEQ_NUM.CURRVAL);
INSERT INTO HANGMOK(LIST,LISTNUM,SUL_NO)
    VALUES('GHJK',5,SEQ_NUM.CURRVAL);
    
INSERT INTO SUL(SUL_NO,TITLE,STARTD,ENDD,AUTHOR)
    VALUES(SEQ_NUM.NEXTVAL,'질문3','2024-08-01','2024-09-01','관리자');
INSERT INTO HANGMOK(LIST,LISTNUM,SUL_NO)
    VALUES('ㄱㄴㄷㄹㅁㅂ',1,SEQ_NUM.CURRVAL);
INSERT INTO HANGMOK(LIST,LISTNUM,SUL_NO)
    VALUES('ㅅㅇㅈㅊㅋㅌ',2,SEQ_NUM.CURRVAL);
INSERT INTO HANGMOK(LIST,LISTNUM,SUL_NO)
    VALUES('ㅍㅎ',3,SEQ_NUM.CURRVAL);
INSERT INTO HANGMOK(LIST,LISTNUM,SUL_NO)
    VALUES('가나다라',4,SEQ_NUM.CURRVAL);
INSERT INTO HANGMOK(LIST,LISTNUM,SUL_NO)
    VALUES('마바사아',5,SEQ_NUM.CURRVAL);
    
INSERT INTO SUL(SUL_NO,TITLE,STARTD,ENDD,AUTHOR)
    VALUES(SEQ_NUM.NEXTVAL,'가장 좋아하는 여자 연예인은?','2024-08-01','2024-08-31','관리자');
INSERT INTO HANGMOK(LIST,LISTNUM,SUL_NO)
    VALUES('배슬기',1,SEQ_NUM.CURRVAL);
INSERT INTO HANGMOK(LIST,LISTNUM,SUL_NO)
    VALUES('김옥빈',2,SEQ_NUM.CURRVAL);
INSERT INTO HANGMOK(LIST,LISTNUM,SUL_NO)
    VALUES('아이비',3,SEQ_NUM.CURRVAL);
INSERT INTO HANGMOK(LIST,LISTNUM,SUL_NO)
    VALUES('한효주',4,SEQ_NUM.CURRVAL);
INSERT INTO HANGMOK(LIST,LISTNUM,SUL_NO)
    VALUES('김선아',5,SEQ_NUM.CURRVAL);

--
CREATE TABLE SCOTT.HANGMOK (
   list VARCHAR2(100 CHAR) NOT NULL, /* 질문 항목 */
   listnum NUMBER NOT NULL, /* 질문 항목 번호 */
   SUL_NO NUMBER NOT NULL /* 설문번호 */
);

COMMENT ON TABLE SCOTT.HANGMOK IS '항목';

COMMENT ON COLUMN SCOTT.HANGMOK.list IS '질문 항목';

COMMENT ON COLUMN SCOTT.HANGMOK.listnum IS '질문 항목 번호';

COMMENT ON COLUMN SCOTT.HANGMOK.SUL_NO IS '설문번호';


--
CREATE TABLE SCOTT.SUL (
	SUL_NO NUMBER NOT NULL, /* 설문번호 */
	status VARCHAR2(3 CHAR), /* 설문 상태 */
	title VARCHAR2(50 CHAR), /* 설문 제목 */
	startd DATE, /* 시작일 */
	endd DATE, /* 종료일 */
	writed DATE, /* 작성일 */
	author VARCHAR2(10 CHAR) /* 작성자 */
);

COMMENT ON TABLE SCOTT.SUL IS '설문 질문';

COMMENT ON COLUMN SCOTT.SUL.SUL_NO IS '설문번호';

COMMENT ON COLUMN SCOTT.SUL.status IS '설문 상태';

COMMENT ON COLUMN SCOTT.SUL.title IS '설문 제목';

COMMENT ON COLUMN SCOTT.SUL.startd IS '시작일';

COMMENT ON COLUMN SCOTT.SUL.endd IS '종료일';

COMMENT ON COLUMN SCOTT.SUL.writed IS '작성일';

COMMENT ON COLUMN SCOTT.SUL.author IS '작성자';

CREATE UNIQUE INDEX SCOTT.PK_SUL
	ON SCOTT.SUL (
		SUL_NO ASC
	);

ALTER TABLE SCOTT.SUL
	ADD
		CONSTRAINT PK_SUL
		PRIMARY KEY (
			SUL_NO
		);
--
CREATE TABLE SCOTT.HANGMOK (
   list VARCHAR2(100 CHAR) NOT NULL, /* 질문 항목 */
   listnum NUMBER NOT NULL, /* 질문 항목 번호 */
   SUL_NO NUMBER NOT NULL, /* 설문번호 */
   
   CONSTRAINT FK_SUL_TO_HANGMOK FOREIGN KEY (SUL_NO) REFERENCES SUL(SUL_NO)
);
--


INSERT INTO sul VALUES (1,'진행중','고양이 털 색깔',sysdate,sysdate+1 ,sysdate,'최사랑' );
INSERT INTO sul VALUES (2,'미진행','강아지 털 색깔',sysdate+30,sysdate+60 ,sysdate,'최사랑' );
INSERT INTO sul VALUES (3,'진행중','가고싶은 여행지',sysdate-5,sysdate+25 ,sysdate,'박준용' );
--
INSERT INTO hangmok VALUES ('흰색',1,1);
INSERT INTO hangmok VALUES ('검정색',2,1);
INSERT INTO hangmok VALUES ('치즈',3,1);
INSERT INTO hangmok VALUES ('삼색이',4,1);

INSERT INTO hangmok VALUES ('흰색',1,2);
INSERT INTO hangmok VALUES ('검정색',2,2);
INSERT INTO hangmok VALUES ('치즈',3,2);
INSERT INTO hangmok VALUES ('삼색이',4,2);

INSERT INTO hangmok VALUES ('제주도',1,3);
INSERT INTO hangmok VALUES ('일본',2,3);
INSERT INTO hangmok VALUES ('중국',3,3);
INSERT INTO hangmok VALUES ('하와이',4,3);
--
INSERT INTO answers values (1, 'love', 1);
INSERT INTO answers values (2, 'ddong', 2);
INSERT INTO answers values (3, 'kkzam', 3);

SELECT *
FROM USERS;
--
SELECT *
FROM answers;
--
select *
FROM sul;
--
SELECT *
FROM hangmok;
--
INSERT INTO SUL VALUES(1, '상태', '제목', sysdate, sysdate, sysdate, '작성자');
INSERT INTO HANGMOK VALUES('list',1, 1);
INSERT INTO HANGMOK VALUES('list2',2, 1);
INSERT INTO HANGMOK VALUES('list3',3, 1);
DESC SUL;
DESC HANGMOK;
SELECT *
FROM SUL;
SELECT *
FROM HANGMOK;
--
ALTER TABLE SUL
ADD button VARCHAR2(5 CHAR) DEFAULT '버튼 있음'; -- 준석님
--
    
    
    
-- 질문명
-- 작성자 : ㅇㅇ  작성일 : ㅇㅇㅇ
-- 시작일 : ㅇㅇ  종료일 : ㅇㅇㅇ
-- 상태 : 진행중  항목수 : n
-- 항목 1
-- 항목 2 . . . ~ 4

-- 4번
-- 1)
SELECT s.title 투표제목, s.author 작성자, s.writed ,s.startd, s.endd, s.status, a.memid, h.list
FROM sul s 
LEFT JOIN answers a 
ON s.sul_no = a.sul_no
RIGht JOIN hangmok h 
on s.sul_no = h.sul_no
WHERE s.title = '질문1';

-- 2)
SELECT COUNT(memid)
FROM answers;

-- 3)
SELECT CASE WHEN startd <= sysdate and endd >= sysdate THEN '버튼 O'
            ELSE '버튼 X'
        END as "버튼상태"
FROM sul;

-- 4)
-- 준용pt님 작품
SELECT  e.고른수 ,  lpad ( ' ' , e.고른수+1, '*')  그래프,  ROUND( CAST(e.고른수 AS FLOAT) / SUM(CAST(e.고른수 AS FLOAT)) OVER (), 2 ) * 100 || '%'
FROM (
SELECT  COUNT(a.ans) "고른수"
FROM answers a 
WHERE a.sul_no = 1 --이것만 선택할 수 있으면 ? (ex. 2번 설문 상세보기 클릭시 여기가 2로 되게)
GROUP BY a.ans
ORDER BY a.sul_no
) e
GROUP BY e.고른수;


SELECT s.SUL_NO, s.title, COUNT(listnum) as vote_count
FROM SUL s
LEFT JOIN HANGMOK h ON s.SUL_NO = h.SUL_NO
GROUP BY s.SUL_NO, s.title;
        -- 4. 설문 상세 보기
        --  1) 설문 목록에서 하나의 설문을 선택해서 선택한 설문
        --     내용 출력하는 쿼리 작성.
        --  2) 총 참여자 수 조회하는 쿼리 작성
        --  3) 투표하기 관련 쿼리 작성 (마감하면 버튼 없어짐)
        --  4) 현재 설문 결과를 그래프로 나타내는 쿼리 작성.(막대그래프)

SELECT department_id,
       (SELECT COUNT(*)
        FROM employees e2
        WHERE e2.department_id = e1.department_id) AS num_employees
FROM employees e1
GROUP BY department_id;

    SELECT ROWNUM 선택지번호, e.*
    FROM (
    SELECT  COUNT(a.ans) "고른수"
    FROM answers a 
    WHERE a.sul_no = 1
    GROUP BY a.ans
    ORDER BY a.sul_no
    ) e;
--    클래스 추가
-- 설문 질문 테이블
CREATE TABLE SUL (
   SUL_NO NUMBER NOT NULL, /* 설문번호 */
   status VARCHAR2(3 CHAR), /* 설문 상태 */
   title VARCHAR2(50 CHAR), /* 설문 제목 */
   startd DATE, /* 시작일 */
   endd DATE, /* 종료일 */
   writed DATE, /* 작성일 */
   author VARCHAR2(10 CHAR), /* 작성자 */
   
   CONSTRAINT PK_SUL PRIMARY KEY (SUL_NO)
);

-- 회원 테이블
CREATE TABLE USERS (
   memid VARCHAR2(15 CHAR) NOT NULL, /* 회원 ID */
   pw VARCHAR2(20 CHAR), /* 비밀번호 */
   nick VARCHAR2(15 CHAR), /* 닉네임 */
   
   CONSTRAINT PK_USERS PRIMARY KEY (memid)
);

-- 설문 답변 테이블
CREATE TABLE ANSWERS (
   SUL_NO NUMBER NOT NULL, /* 설문번호 */
   memid VARCHAR2(15 CHAR) NOT NULL, /* 회원 ID */
   ans NUMBER, /* 답변 */
   
   CONSTRAINT FK_SUL_TO_ANSWERS FOREIGN KEY (SUL_NO) REFERENCES SUL(SUL_NO),
   CONSTRAINT FK_USERS_TO_ANSWERS FOREIGN KEY (memid) REFERENCES USERS(memid),
   CONSTRAINT PK_ANSWERS PRIMARY KEY (SUL_NO, memid)
);

-- 설문 항목 테이블
CREATE TABLE SCOTT.HANGMOK (
   list VARCHAR2(100 CHAR) NOT NULL, /* 질문 항목 */
   listnum NUMBER NOT NULL, /* 질문 항목 번호 */
   SUL_NO NUMBER NOT NULL, /* 설문번호 */
   
   CONSTRAINT FK_SUL_TO_HANGMOK FOREIGN KEY (SUL_NO) REFERENCES SUL(SUL_NO)
);
    
    
-- 클래스 create 후 할것

-- 시퀀스
CREATE SEQUENCE SEQ_NUM;
-- 임의의 회원
INSERT INTO USERS VALUES('송','1234','NICK');
INSERT INTO USERS VALUES('김재민','1234','NICK');
INSERT INTO USERS VALUES('김김김','1234','NICK');
INSERT INTO USERS VALUES('백백백','1234','NICK');
INSERT INTO USERS VALUES('최유진','1234','NICK');
INSERT INTO USERS VALUES('전','1234','NICK');
INSERT INTO USERS VALUES('최','1234','NICK');
--임의값 INSERT
INSERT INTO SUL(SUL_NO,TITLE,STARTD,ENDD,WRITED,AUTHOR)
    VALUES(SEQ_NUM.NEXTVAL,'질문1','2006-03-01','2006-04-01','2006-03-15','관리자');
    
INSERT INTO HANGMOK(LIST,LISTNUM,SUL_NO)
    VALUES('QWER',1,SEQ_NUM.CURRVAL);
INSERT INTO HANGMOK(LIST,LISTNUM,SUL_NO)
    VALUES('ASDF',2,SEQ_NUM.CURRVAL);
INSERT INTO HANGMOK(LIST,LISTNUM,SUL_NO)
    VALUES('ZXCV',3,SEQ_NUM.CURRVAL);
INSERT INTO HANGMOK(LIST,LISTNUM,SUL_NO)
    VALUES('TYUI',4,SEQ_NUM.CURRVAL);
    
INSERT INTO ANSWERS(SUL_NO,MEMID,ANS)
    VALUES(SEQ_NUM.CURRVAL,'송',5);
    
INSERT INTO SUL
    VALUES(SEQ_NUM.NEXTVAL,'질문2','2006-03-01','2006-04-01','2006-03-15','관리자');
INSERT INTO HANGMOK(LIST,LISTNUM,SUL_NO)
    VALUES('QWER',1,SEQ_NUM.CURRVAL);
INSERT INTO HANGMOK(LIST,LISTNUM,SUL_NO)
    VALUES('ASDF',2,SEQ_NUM.CURRVAL);
INSERT INTO HANGMOK(LIST,LISTNUM,SUL_NO)
    VALUES('ZXCV',3,SEQ_NUM.CURRVAL);
INSERT INTO HANGMOK(LIST,LISTNUM,SUL_NO)
    VALUES('TYUI',4,SEQ_NUM.CURRVAL);
INSERT INTO HANGMOK(LIST,LISTNUM,SUL_NO)
    VALUES('TYUI',5,SEQ_NUM.CURRVAL);
INSERT INTO HANGMOK(LIST,LISTNUM,SUL_NO)
    VALUES('TYUI',6,SEQ_NUM.CURRVAL);
INSERT INTO HANGMOK(LIST,LISTNUM,SUL_NO)
    VALUES('TYUI',7,SEQ_NUM.CURRVAL);
INSERT INTO ANSWERS(SUL_NO,MEMID,ANS)
    VALUES(SEQ_NUM.CURRVAL,'송',5);
    
INSERT INTO SUL
    VALUES(SEQ_NUM.NEXTVAL,'질문3','2024-08-01','2024-09-01','2024-08-24','관리자');
INSERT INTO HANGMOK(LIST,LISTNUM,SUL_NO)
    VALUES('ㄱㄴㄷㄹㅁㅂ',1,SEQ_NUM.CURRVAL);
INSERT INTO HANGMOK(LIST,LISTNUM,SUL_NO)
    VALUES('ㅅㅇㅈㅊㅋㅌ',2,SEQ_NUM.CURRVAL);
INSERT INTO HANGMOK(LIST,LISTNUM,SUL_NO)
    VALUES('ㅍㅎ',3,SEQ_NUM.CURRVAL);
INSERT INTO HANGMOK(LIST,LISTNUM,SUL_NO)
    VALUES('가나다라',4,SEQ_NUM.CURRVAL);
INSERT INTO HANGMOK(LIST,LISTNUM,SUL_NO)
    VALUES('마바사아',5,SEQ_NUM.CURRVAL);
INSERT INTO ANSWERS(SUL_NO,MEMID,ANS)
    VALUES(SEQ_NUM.CURRVAL,'김재민',1);
INSERT INTO ANSWERS(SUL_NO,MEMID,ANS)
    VALUES(SEQ_NUM.CURRVAL,'김김김',1);
INSERT INTO ANSWERS(SUL_NO,MEMID,ANS)
    VALUES(SEQ_NUM.CURRVAL,'백백백',2);
INSERT INTO ANSWERS(SUL_NO,MEMID,ANS)
    VALUES(SEQ_NUM.CURRVAL,'송',5);
    
INSERT INTO SUL
    VALUES(SEQ_NUM.NEXTVAL,'가장 좋아하는 여자 연예인은?','2024-08-01','2024-08-31','2024-08-10','관리자');
INSERT INTO HANGMOK(LIST,LISTNUM,SUL_NO)
    VALUES('배슬기',1,SEQ_NUM.CURRVAL);
INSERT INTO HANGMOK(LIST,LISTNUM,SUL_NO)
    VALUES('김옥빈',2,SEQ_NUM.CURRVAL);
INSERT INTO HANGMOK(LIST,LISTNUM,SUL_NO)
    VALUES('아이비',3,SEQ_NUM.CURRVAL);
INSERT INTO HANGMOK(LIST,LISTNUM,SUL_NO)
    VALUES('한효주',4,SEQ_NUM.CURRVAL);
INSERT INTO HANGMOK(LIST,LISTNUM,SUL_NO)
    VALUES('김선아',5,SEQ_NUM.CURRVAL);
INSERT INTO HANGMOK(LIST,LISTNUM,SUL_NO)
    VALUES('김태희',6,SEQ_NUM.CURRVAL);
INSERT INTO HANGMOK(LIST,LISTNUM,SUL_NO)
    VALUES('한선화',7,SEQ_NUM.CURRVAL);
INSERT INTO ANSWERS(SUL_NO,MEMID,ANS)
    VALUES(SEQ_NUM.CURRVAL,'김재민',1);
INSERT INTO ANSWERS(SUL_NO,MEMID,ANS)
    VALUES(SEQ_NUM.CURRVAL,'김김김',1);
INSERT INTO ANSWERS(SUL_NO,MEMID,ANS)
    VALUES(SEQ_NUM.CURRVAL,'백백백',2);
INSERT INTO ANSWERS(SUL_NO,MEMID,ANS)
    VALUES(SEQ_NUM.CURRVAL,'최유진',2);
INSERT INTO ANSWERS(SUL_NO,MEMID,ANS)
    VALUES(SEQ_NUM.CURRVAL,'전',2);
INSERT INTO ANSWERS(SUL_NO,MEMID,ANS)
    VALUES(SEQ_NUM.CURRVAL,'최',5);
INSERT INTO ANSWERS(SUL_NO,MEMID,ANS)
    VALUES(SEQ_NUM.CURRVAL,'송',5);

SELECT *
FROM USERS;
--
SELECT *
FROM answers;
--
select *
FROM sul;
--
SELECT *
FROM hangmok;
--















